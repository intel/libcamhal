#
#  Copyright (C) 2018 Intel Corporation
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#

#!/bin/sh

cd /sys/kernel/debug/tracing

mkdir -p /home/logs/

config1()
{
#  exemple for also tracing all function starting with hsi:
#  echo function > current_tracer
#  echo hsi* >> set_ftrace_filter

	echo > set_event
	echo sched:sched_wakeup >> set_event
	echo sched:sched_switch >> set_event
	echo timer:timer_init >> set_event
	echo timer:timer_start >> set_event
	echo timer:timer_expire_entry >> set_event
	echo timer:timer_expire_exit >> set_event
	echo timer:hrtimer_start >> set_event
	echo timer:hrtimer_expire_entry >> set_event
	echo timer:hrtimer_expire_exit >> set_event
	echo timer:itimer_expire >> set_event
	echo workqueue:workqueue_activate_work >> set_event
	echo workqueue:workqueue_execute_start >> set_event
	echo workqueue:workqueue_execute_end >> set_event
	echo 'power:*' >> set_event
	echo 'irq:*' >> set_event
	echo 'rpm:*' >> set_event
	echo 'ipu4:*' >> set_event
}

config2()
{
  echo > set_event
  echo power:wakeup_source_activate >> set_event
  echo power:wakeup_source_deactivate >> set_event
}

start()
{
  echo nop > current_tracer

  if [ -z $1 ]; then
    echo 50000 > buffer_size_kb
  elif [ "`expr $1 + 0`" != "" ]; then
    echo $1 > buffer_size_kb
  else
    help
  fi

  config1

  echo >trace
  samplepstate --interval 0.05 &
  echo 1 >tracing_on
}

start_profile1()
{
  echo nop > current_tracer
  echo 5000 > buffer_size_kb

  config1

  echo >trace
  echo 1 >tracing_on
}

start_profile2()
{
  echo nop > current_tracer
  echo 50000 > buffer_size_kb

  config2

  echo >trace
  echo 1 >tracing_on
}

output_trace()
{
  echo "we use default folder /home/logs!"
  output=/home/logs/atrace_$1_`/bin/date +%y-%m-%d-%H-%M-%S`.txt.gz
  cat trace | gzip > $output
  echo trace written to $output... you can now get the trace for camtune.
}

stop()
{
  samplepstatePID=`ps -ef | grep "samplepstate" | grep -v grep | awk '{print $2}'`
  kill ${samplepstatePID}
  echo >set_event
  echo 0 >tracing_on
  output_trace $1
}

restart()
{
  echo 0 >tracing_on
  output_trace $1
  echo >trace
  echo 1 >tracing_on
}

restart_profile1()
{
  echo 0 >tracing_on
  output=`tail -1 /data/logs/history_event | grep -o " /.*crashlog.*"`
  output_trace $output
  echo >trace
  echo 1 >tracing_on
}

restart_profile2()
{
  echo 0 >tracing_on
  cat trace | gzip > /data/logs/stats/wakelock_data.txt.gz
  touch /data/logs/stats/wakelock_trigger
  echo >trace
  echo 1 >tracing_on
}

help()
{
  echo "usage: $0 [start|stop|restart|start_profile1|restart_profile1|start_profile2|restart_profile2]"
  echo "          [size of the buffer for start argument|workload name for stop or restart]"
}

if [ $# -le 2 ] ; then
  COMMAND="$1"
  case $COMMAND in
  start|stop|restart|start_profile1|restart_profile1|start_profile2|restart_profile2)
    if [ -z $2 ]; then
      $COMMAND
    else
      $COMMAND $2
    fi
    ;;
  *)
    help
    ;;
  esac
else
   help
fi
